---

# tasks file for clustersetup
- name: install docker in master node
  package:
    name: docker
    state: present
  when: inventory_hostname in groups["master"] or  groups["slave"] 
- name: Enable Docker  service at startup
  service:
    name: docker
    state: started
    enabled: yes
  when: inventory_hostname in groups["master"] or  groups["slave"] 


- name: Add kubernetes repo
  yum_repository:
    name: kubernetes
    description: Kubernetes repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: yes
    enabled: yes
  when:  inventory_hostname in groups["master"] or  groups["slave"]

- name: install kubernetes binaries
  package:
          name: "{{ packages }}"
          state: present




- name: image pull kubeadm
  command: " kubeadm config images pull "
  when: inventory_hostname in groups["master"] 


- name: copying daemon.json file
  copy:
          src: daemon.json
          dest: /etc/docker/daemon.json

- name: restart docker 
  service:
          name: docker
          state: restarted 



- name: install iproute-tc
  package:
          name: iproute-tc
          state: present          
          
- name: kubeadm init cmd 
  command: " kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem  "
  args:
          chdir: /root/
          creates: kubeadm_init_log.txt

  when: inventory_hostname in groups["master"]


- name: copying admin file and changing ownership
  shell: "{{ item }}"
  with_items:
          - mkdir -p $HOME/.kube
          - cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          - chown $(id -u):$(id -g) $HOME/.kube/config
  when: inventory_hostname in groups["master"]


- name: creating flannel overlay network 
  command: " kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml "
  when: inventory_hostname in groups["master"]


- name: conf file for netbridge
  copy:   
        src: k8s.conf
        dest: /etc/sysctl.d/k8s.conf
  when: inventory_hostname in groups["slave"]

- name: sysctl
  command: " sysctl --system "
  when: inventory_hostname in groups["slave"]


- name: getting tokens
  command: " kubeadm token create  --print-join-command "
  register: token
  when: inventory_hostname in groups["master"]


- name: copy iproutetc  to localhost
  local_action:
          module: copy
          src: k8s.conf
          dest: /etc/sysctl.d/k8s.conf
  when: inventory_hostname in groups["slave"]



- name: sysctl
  command: " sysctl --system "
  when: inventory_hostname in groups["slave"]


- name: getting tokens
  command: " kubeadm token create  --print-join-command "
  register: token
  when: inventory_hostname in groups["master"]


- name: copy token to localhost
  local_action:
          module: copy

          content: "{{ token.stdout }}"
          dest: slave_token.sh
  when: inventory_hostname in groups["master"]


- name: copy token to slave
  copy:
          src: slave_token.sh
          dest: /root
          mode: 0777
  when: inventory_hostname in groups["slave"]


- name: runnung token file
  command: "sh /root/slave_token.sh"
  when: inventory_hostname in groups["slave"]





          
